$width: 100;
$gutter: 10;
$columns: 12;

.wrapper {
  width: 100%;
  max-width: 960px;
  margin: 0 auto;
  padding: 0 5px;
  background: #CDCDCD;
}
.container {
  margin-left: auto;
  margin-right: auto;
  padding-left: $gutter + px;
  padding-right: $gutter + px;
}
.row {
  margin-left: -$gutter + px;
  margin-right: -$gutter + px;
  overflow: hidden;
}
.col {
  position: relative;
  min-height: 1px;
  float: left;
  padding-left: $gutter + px;
  padding-right: $gutter + px;
  box-sizing: border-box;
  transition: all .7s ease;
}
@mixin centered {
  margin-left: auto;
  margin-right: auto;
  float: none;
}
@mixin uncentered {
  margin-left: initial;
  margin-right: initial;
  float: left;
}
//$mob: 1px;

//$xmob: 375px; //iPhone 6
//$xxmob: 414px; //iPhone 6+
//$tab: 768px;
//$xtab: 1025px;
//$lap: 1280px; // MacBook 13'
//$xlap: 1440px; // MacBook 15'
//$xxdesk: 1600px;
//$xxxdesk: 2560px; //iMac '27

$resolutions: 320px, 375px, 414px, 768px, 1024px, 1280px, 1440px, 1600px, 2560px;

$sizeList: mob xmob xxmob tab xtab lap xlap desk xdesk;

@for $size from 1 through length($sizeList) {
  @media screen and (min-width: nth($resolutions, $size)) {
    @for $i from 1 through $columns {
      $column-width: (($width / $columns) * $i) * 1%;
      .#{nth($sizeList, $size)}-#{$i} {
        width: $column-width;
      }
      .#{nth($sizeList, $size)}-centered {
        @include centered;
      }
      .#{nth($sizeList, $size)}-uncentered {
        @include uncentered;
      }
      .#{nth($sizeList, $size)}-offset-#{$i} {
        margin-left: $column-width;
      }
      .#{nth($sizeList, $size)}-push-#{$i} {
        left: $column-width;
      }
      .#{nth($sizeList, $size)}-pull-#{$i} {
        right: $column-width;
      }
    }
  }
}
